name: Spring Boot with MySQL

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
  DOCKER_IMAGE_NAME: server-user-img
  DOCKER_IMAGE_TAG: latest
  MYSQL_VERSION: latest
  MYSQL_DATABASE: myapp
  MYSQL_USER: myuser
  MYSQL_PASSWORD: mypass

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:${{ env.MYSQL_VERSION }}
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Maven project
        run: mvn clean install -DskipTests
        
      - name: Log in to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build --tag ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}

      - name: Run Docker container
        run: |
          docker run -d --name myapp-container \
          -p 8080:8080 \
          -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${{ env.MYSQL_DATABASE }}?useSSL=false&serverTimezone=UTC \
          -e SPRING_DATASOURCE_USERNAME=${{ env.MYSQL_USER }} \
          -e SPRING_DATASOURCE_PASSWORD=${{ env.MYSQL_PASSWORD }} \
          ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
